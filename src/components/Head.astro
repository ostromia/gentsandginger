---
import { Font } from "astro:assets";
import type { ImageMetadata } from "astro";
import { SITE_TITLE } from "~src/consts";

interface Props {
    title: string;
    description: string;
    image: ImageMetadata;
}

const { title, description, image } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" title={SITE_TITLE} href={new URL("rss.xml", Astro.site)} />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<Font cssVariable="--font-atkinson-hyperlegible" preload />
<Font cssVariable="--font-reenie-beanie" preload />
<Font cssVariable="--font-grandstander" preload />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />

<!-- FitText.js -->
<script>
    /*!
     * FitText.js 1.0 jQuery free version
     *
     * Copyright 2011, Dave Rupert http://daverupert.com
     * Released under the WTFPL license
     * http://sam.zoy.org/wtfpl/
     * Modified by Slawomir Kolodziej http://slawekk.info
     *
     * Date: Tue Aug 09 2011 10:45:54 GMT+0200 (CEST)
     */
    (function () {
        var addEvent = function (el, type, fn) {
            if (el.addEventListener) el.addEventListener(type, fn, false);
            else el.attachEvent("on" + type, fn);
        };

        var extend = function (obj, ext) {
            for (var key in ext) if (ext.hasOwnProperty(key)) obj[key] = ext[key];
            return obj;
        };

        window.fitText = function (el, kompressor, options) {
            var settings = extend(
                {
                    minFontSize: -1 / 0,
                    maxFontSize: 1 / 0
                },
                options
            );

            var fit = function (el) {
                var compressor = kompressor || 1;

                var resizer = function () {
                    el.style.fontSize =
                        Math.max(Math.min(el.clientWidth / (compressor * 10), parseFloat(settings.maxFontSize)), parseFloat(settings.minFontSize)) +
                        "px";
                };

                // Call once to set.
                resizer();

                // Bind events
                // If you have any js library which support Events, replace this part
                // and remove addEvent function (or use original jQuery version)
                addEvent(window, "resize", resizer);
                addEvent(window, "orientationchange", resizer);
            };

            if (el.length) for (var i = 0; i < el.length; i++) fit(el[i]);
            else fit(el);

            // return set of elements
            return el;
        };
    })();

    document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".madri").forEach((e) => {
            window.fitText(e, 1.25);
        });
    });
</script>
