---
import { Image } from "astro:assets";

interface Props {
    images: ImageMetadata[];
}

const { images } = Astro.props;
---

<script>
    let index = 0;
    const updateSlide = () => {
        const slides = document.getElementById("slides");
        if (slides) {
            slides.style.transform = `translateX(-${index * 100}%)`;
        }
    };

    window.slideNext = () => {
        const total = document.querySelectorAll("#slides .slide").length;
        index = (index + 1) % total;
        updateSlide();
    };

    window.slidePrev;
</script>

<div class="slideshow">
    <div class="slides" id="slides">
        {
            images.map((src) => (
                <div class="slide">
                    <Image alt="" src={src} class="image" layout="constrained" height="1080" width="1920" />
                </div>
            ))
        }
    </div>

    <div class="controls">
        <button onclick="window.slidePrev()">‹</button>
        <button onclick="window.slideNext()">›</button>
    </div>
</div>

<style lang="scss">
    .slideshow {
        position: relative;
        width: 100%;
        max-width: 100%;
        overflow: hidden;
    }

    .slides {
        display: flex;
        transition: transform 0.5s ease-in-out;
        width: 100%;
    }

    .slide {
        min-width: 100%;
        height: auto;
    }

    .slide img {
        height: 100vh;
        width: 100%;

        object-fit: cover;

        // width: 100%;
        // height: auto;
        display: block;
    }

    .controls {
        position: absolute;
        top: 50%;
        width: 100%;
        display: flex;
        justify-content: space-between;
        transform: translateY(-50%);
        pointer-events: none;
    }

    .controls button {
        background: rgba(0, 0, 0, 0.4);
        color: white;
        border: none;
        font-size: 2rem;
        padding: 0.5rem 1rem;
        cursor: pointer;
        pointer-events: all;
    }
</style>
